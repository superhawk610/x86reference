{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpscatterdd:vpscatterdq:vpscatterqd:vpscatterqq",
    "result": {"pageContext":{"op":{"id":"vpscatterdd:vpscatterdq:vpscatterqd:vpscatterqq","variants":["VPSCATTERQQ","VPSCATTERDD","VPSCATTERQD","VPSCATTERDQ"],"variant_descriptions":{"VPSCATTERDD":"Using signed dword indices, scatter dword values to memory using writemask k1.","VPSCATTERDQ":"Using signed dword indices, scatter qword values to memory using writemask k1.","VPSCATTERQD":"Using signed qword indices, scatter dword values to memory using writemask k1.","VPSCATTERQQ":"Using signed qword indices, scatter qword values to memory using writemask k1."},"text":"<p>Stores up to 16 elements (8 elements for qword indices) in doubleword vector or 8 elements in quadword vector to the memory locations pointed by base address BASE_ADDR and index vector VINDEX, with scale SCALE. The elements are specified via the VSIB (i.e., the index register is a vector register, holding packed indices). Elements will only be stored if their corresponding mask bit is one. The entire mask register will be set to zero by this instruction unless it triggers an exception.</p><p>This instruction can be suspended by an exception if at least one element is already scattered (i.e., if the exception is triggered by an element other than the rightmost one with its mask bit set). When this happens, the destination register and the mask register are partially updated. If any traps or interrupts are pending from already scattered elements, they will be delivered in lieu of the exception; in this case, EFLAG.RF is set to one so an instruction breakpoint is not re-triggered when the instruction is continued.</p>","href":"https://www.felixcloutier.com/x86/VPSCATTERDD%3AVPSCATTERDQ%3AVPSCATTERQD%3AVPSCATTERQQ.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}