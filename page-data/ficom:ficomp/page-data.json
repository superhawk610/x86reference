{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/ficom:ficomp",
    "result": {"pageContext":{"op":{"id":"ficom:ficomp","variants":["FICOMP","FICOM"],"variant_descriptions":{"FICOM":"Compare ST(0) with m32int.","FICOMP":"Compare ST(0) with m32int and pop stack register."},"text":"<p>Compares the value in ST(0) with an integer source operand and sets the condition code flags C0, C2, and C3 in the FPU status word according to the results (see table below). The integer value is converted to double extended-precision floating-point format before the comparison is made.</p><p>These instructions perform an “unordered comparison.” An unordered comparison also checks the class of the numbers being compared (see “FXAM—Examine Floating-Point” in this chapter). If either operand is a NaN or is in an undefined format, the condition flags are set to “unordered.”</p><p>The sign of zero is ignored, so that –0.0 ← +0.0.</p><p>The FICOMP instructions pop the register stack following the comparison. To pop the register stack, the processor marks the ST(0) register empty and increments the stack pointer (TOP) by 1.</p><p>This instruction’s operation is the same in non-64-bit modes and 64-bit mode.</p>","href":"https://www.felixcloutier.com/x86/FICOM%3AFICOMP.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}