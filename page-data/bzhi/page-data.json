{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/bzhi",
    "result": {"pageContext":{"op":{"id":"bzhi","variants":["BZHI"],"variant_descriptions":{"BZHI":"Zero bits in r/m64 starting with the position in r64b, write result to r64a."},"text":"<p>BZHI copies the bits of the first source operand (the second operand) into the destination operand (the first operand) and clears the higher bits in the destination according to the INDEX value specified by the second source operand (the third operand). The INDEX is specified by bits 7:0 of the second source operand. The INDEX value is saturated at the value of OperandSize -1. CF is set, if the number contained in the 8 low bits of the third operand is greater than OperandSize -1.</p><p>This instruction is not supported in real mode and virtual-8086 mode. The operand size is always 32 bits if not in 64-bit mode. In 64-bit mode operand size 64 requires VEX.W1. VEX.W1 is ignored in non-64-bit modes. An attempt to execute this instruction with VEX.L not equal to 0 will cause #UD.</p>","href":"https://www.felixcloutier.com/x86/BZHI.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}