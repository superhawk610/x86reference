{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/mulpd",
    "result": {"pageContext":{"op":{"id":"mulpd","variants":["VMULPD","MULPD"],"variant_descriptions":{"MULPD":"Multiply packed double-precision floating-point values in xmm2/m128 with xmm1 and store result in xmm1.","VMULPD":"Multiply packed double-precision floating-point values in zmm3/m512/m64bcst with zmm2 and store result in zmm1."},"text":"<p>Multiply packed double-precision floating-point values from the first source operand with corresponding values in the second source operand, and stores the packed double-precision floating-point results in the destination operand.</p><p>EVEX encoded versions: The first source operand (the second operand) is a ZMM/YMM/XMM register. The second source operand can be a ZMM/YMM/XMM register, a 512/256/128-bit memory location or a 512/256/128-bit vector broadcasted from a 64-bit memory location. The destination operand is a ZMM/YMM/XMM register conditionally updated with writemask k1.</p><p>VEX.256 encoded version: The first source operand is a YMM register. The second source operand can be a YMM register or a 256-bit memory location. The destination operand is a YMM register. Bits (MAXVL-1:256) of the corresponding destination ZMM register are zeroed.</p><p>VEX.128 encoded version: The first source operand is a XMM register. The second source operand can be a XMM register or a 128-bit memory location. The destination operand is a XMM register. The upper bits (MAXVL-1:128) of the destination YMM register destination are zeroed.</p><p>128-bit Legacy SSE version: The second source can be an XMM register or an 128-bit memory location. The destination is not distinct from the first source XMM register and the upper bits (MAXVL-1:128) of the corresponding ZMM register destination are unmodified.</p>","href":"https://www.felixcloutier.com/x86/MULPD.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}