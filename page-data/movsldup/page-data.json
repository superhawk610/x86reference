{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/movsldup",
    "result": {"pageContext":{"op":{"id":"movsldup","variants":["MOVSLDUP","VMOVSLDUP"],"variant_descriptions":{"MOVSLDUP":"Move even index single-precision floating-point values from xmm2/mem and duplicate each element into xmm1.","VMOVSLDUP":"Move even index single-precision floating-point values from zmm2/m512 and duplicate each element into zmm1 under writemask."},"text":"<p>Duplicates even-indexed single-precision floating-point values from the source operand (the second operand). See <a href=\"https://www.felixcloutier.com/x86/MOVSLDUP.html#fig-4-4\" rel=\"noreferrer noopener\" target=\"_blank\">Figure 4-4</a>. The source operand is an XMM, YMM or ZMM register or 128, 256 or 512-bit memory location and the destination operand is an XMM, YMM or ZMM register.</p><p>128-bit Legacy SSE version: Bits (MAXVL-1:128) of the corresponding destination register remain unchanged.</p><p>VEX.128 encoded version: Bits (MAXVL-1:128) of the destination register are zeroed.</p><p>VEX.256 encoded version: Bits (MAXVL-1:256) of the destination register are zeroed.</p><p>EVEX encoded version: The destination operand is updated at 32-bit granularity according to the writemask.</p><p>Note: VEX.vvvv and EVEX.vvvv are reserved and must be 1111b otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/MOVSLDUP.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}