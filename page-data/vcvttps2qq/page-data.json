{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vcvttps2qq",
    "result": {"pageContext":{"op":{"id":"vcvttps2qq","variants":["VCVTTPS2QQ"],"variant_descriptions":{"VCVTTPS2QQ":"Convert eight packed single precision floating-point values from ymm2/m256/m32bcst to eight packed signed quadword values in zmm1 using truncation subject to writemask k1."},"text":"<p>Converts with truncation packed single-precision floating-point values in the source operand to eight signed quadword integers in the destination operand.</p><p>When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the indefinite integer value (2<sup>w-1</sup>, where w represents the number of bits in the destination format) is returned.</p><p>EVEX encoded versions: The source operand is a YMM/XMM/XMM (low 64 bits) register or a 256/128/64-bit memory location. The destination operation is a vector register conditionally updated with writemask k1.</p><p>Note: EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/VCVTTPS2QQ.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}