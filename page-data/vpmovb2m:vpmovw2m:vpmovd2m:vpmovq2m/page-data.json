{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpmovb2m:vpmovw2m:vpmovd2m:vpmovq2m",
    "result": {"pageContext":{"op":{"id":"vpmovb2m:vpmovw2m:vpmovd2m:vpmovq2m","variants":["VPMOVQ2M","VPMOVW2M","VPMOVD2M","VPMOVB2M"],"variant_descriptions":{"VPMOVB2M":"Sets each bit in k1 to 1 or 0 based on the value of the most significant bit of the corresponding byte in ZMM1.","VPMOVW2M":"Sets each bit in k1 to 1 or 0 based on the value of the most significant bit of the corresponding word in ZMM1.","VPMOVD2M":"Sets each bit in k1 to 1 or 0 based on the value of the most significant bit of the corresponding doubleword in ZMM1.","VPMOVQ2M":"Sets each bit in k1 to 1 or 0 based on the value of the most significant bit of the corresponding quadword in ZMM1."},"text":"<p>Converts a vector register to a mask register. Each element in the destination register is set to 1 or 0 depending on the value of most significant bit of the corresponding element in the source register.</p><p>The source operand is a ZMM/YMM/XMM register. The destination operand is a mask register.</p><p>EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/VPMOVB2M%3AVPMOVW2M%3AVPMOVD2M%3AVPMOVQ2M.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}