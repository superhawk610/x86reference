{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/pmovmskb",
    "result": {"pageContext":{"op":{"id":"pmovmskb","variants":["VPMOVMSKB","PMOVMSKB"],"variant_descriptions":{"PMOVMSKB":"Move a byte mask of xmm to reg. The upper bits of r32 or r64 are zeroed","VPMOVMSKB":"Move a 32-bit mask of ymm1 to reg. The upper bits of r64 are filled with zeros."},"text":"<p>Creates a mask made up of the most significant bit of each byte of the source operand (second operand) and stores the result in the low byte or word of the destination operand (first operand).</p><p>The byte mask is 8 bits for 64-bit source operand, 16 bits for 128-bit source operand and 32 bits for 256-bit source operand. The destination operand is a general-purpose register.</p><p>In 64-bit mode, the instruction can access additional registers (XMM8-XMM15, R8-R15) when used with a REX.R prefix. The default operand size is 64-bit in 64-bit mode.</p><p>Legacy SSE version: The source operand is an MMX technology register.</p><p>128-bit Legacy SSE version: The source operand is an XMM register.</p><p>VEX.128 encoded version: The source operand is an XMM register.</p><p>VEX.256 encoded version: The source operand is a YMM register.</p><p>Note: VEX.vvvv is reserved and must be 1111b.</p>","href":"https://www.felixcloutier.com/x86/PMOVMSKB.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}