{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/cvtpi2ps",
    "result": {"pageContext":{"op":{"id":"cvtpi2ps","variants":["CVTPI2PS"],"variant_descriptions":{"CVTPI2PS":"Convert two signed doubleword integers from mm/m64 to two single-precision floating-point values in xmm."},"text":"<p>Converts two packed signed doubleword integers in the source operand (second operand) to two packed single-precision floating-point values in the destination operand (first operand).</p><p>The source operand can be an MMX technology register or a 64-bit memory location. The destination operand is an XMM register. The results are stored in the low quadword of the destination operand, and the high quadword remains unchanged. When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register.</p><p>This instruction causes a transition from x87 FPU to MMX technology operation (that is, the x87 FPU top-of-stack pointer is set to 0 and the x87 FPU tag word is set to all 0s [valid]). If this instruction is executed while an x87 FPU floating-point exception is pending, the exception is handled before the CVTPI2PS instruction is executed.</p><p>In 64-bit mode, use of the REX.R prefix permits this instruction to access additional registers (XMM8-XMM15).</p>","href":"https://www.felixcloutier.com/x86/CVTPI2PS.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}