{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/fcmovcc",
    "result": {"pageContext":{"op":{"id":"fcmovcc","variants":["FCMOVB","FCMOVNE","FCMOVBE","FCMOVU","FCMOVE","FCMOVNU","FCMOVNB","FCMOVNBE"],"variant_descriptions":{"FCMOVB":"Move if below (CF=1).","FCMOVE":"Move if equal (ZF=1).","FCMOVBE":"Move if below or equal (CF=1 or ZF=1).","FCMOVU":"Move if unordered (PF=1).","FCMOVNB":"Move if not below (CF=0).","FCMOVNE":"Move if not equal (ZF=0).","FCMOVNBE":"Move if not below or equal (CF=0 and ZF=0).","FCMOVNU":"Move if not unordered (PF=0)."},"text":"<p>Tests the status flags in the EFLAGS register and moves the source operand (second operand) to the destination operand (first operand) if the given test condition is true. The condition for each mnemonic os given in the Description column above and in Chapter 8 in the <em>Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1</em>. The source operand is always in the ST(i) register and the destination operand is always ST(0).</p><p>The FCMOV<em>cc</em> instructions are useful for optimizing small IF constructions. They also help eliminate branching overhead for IF operations and the possibility of branch mispredictions by the processor.</p><p>A processor may not support the FCMOV<em>cc</em> instructions. Software can check if the FCMOV<em>cc</em> instructions are supported by checking the processor’s feature information with the CPUID instruction (see “COMISS—Compare Scalar Ordered Single-Precision Floating-Point Values and Set EFLAGS” in this chapter). If both the CMOV and FPU feature bits are set, the FCMOV<em>cc</em> instructions are supported.</p><p>This instruction’s operation is the same in non-64-bit modes and 64-bit mode.</p><p>The FCMOVcc instructions were introduced to the IA-32 Architecture in the P6 family processors and are not available in earlier IA-32 processors.</p>","href":"https://www.felixcloutier.com/x86/FCMOVcc.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}