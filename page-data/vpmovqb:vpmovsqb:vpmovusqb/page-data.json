{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpmovqb:vpmovsqb:vpmovusqb",
    "result": {"pageContext":{"op":{"id":"vpmovqb:vpmovsqb:vpmovusqb","variants":["VPMOVSQB","VPMOVUSQB","VPMOVQB"],"variant_descriptions":{"VPMOVQB":"Converts 8 packed quad-word integers from zmm2 into 8 packed byte integers in xmm1/m64 with truncation under writemask k1.","VPMOVSQB":"Converts 8 packed signed quad-word integers from zmm2 into 8 packed signed byte integers in xmm1/m64 using signed saturation under writemask k1.","VPMOVUSQB":"Converts 8 packed unsigned quad-word integers from zmm2 into 8 packed unsigned byte integers in xmm1/m64 using unsigned saturation under writemask k1."},"text":"<p>VPMOVQB down converts 64-bit integer elements in the source operand (the second operand) into packed byte elements using truncation. VPMOVSQB converts signed 64-bit integers into packed signed bytes using signed saturation. VPMOVUSQB convert unsigned quad-word values into unsigned byte values using unsigned saturation. The source operand is a vector register. The destination operand is an XMM register or a memory location.</p><p>Down-converted byte elements are written to the destination operand (the first operand) from the least-significant byte. Byte elements of the destination operand are updated according to the writemask. Bits (MAXVL-1:64) of the destination are zeroed.</p><p>EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/VPMOVQB%3AVPMOVSQB%3AVPMOVUSQB.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}