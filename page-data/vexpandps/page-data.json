{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vexpandps",
    "result": {"pageContext":{"op":{"id":"vexpandps","variants":["VEXPANDPS"],"variant_descriptions":{"VEXPANDPS":"Expand packed single-precision floating-point values from zmm2/m512 to zmm1 using writemask k1."},"text":"<p>Expand (load) up to 16/8/4, contiguous, single-precision floating-point values of the input vector in the source operand (the second operand) to sparse elements of the destination operand (the first operand) selected by the writemask k1.</p><p>The destination operand is a ZMM/YMM/XMM register, the source operand can be a ZMM/YMM/XMM register or a 512/256/128-bit memory location.</p><p>The input vector starts from the lowest element in the source operand. The writemask k1 selects the destination elements (a partial vector or sparse elements if less than 16 elements) to be replaced by the ascending elements in the input vector. Destination elements not selected by the writemask k1 are either unmodified or zeroed, depending on EVEX.z.</p><p>EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD.</p><p>Note that the compressed displacement assumes a pre-scaling (N) corresponding to the size of one single element instead of the size of the full vector.</p>","href":"https://www.felixcloutier.com/x86/VEXPANDPS.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}