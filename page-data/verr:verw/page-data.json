{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/verr:verw",
    "result": {"pageContext":{"op":{"id":"verr:verw","variants":["VERW","VERR"],"variant_descriptions":{"VERR":"Set ZF=1 if segment specified with r/m16 can be read.","VERW":"Set ZF=1 if segment specified with r/m16 can be written."},"text":"<p>Verifies whether the code or data segment specified with the source operand is readable (VERR) or writable (VERW) from the current privilege level (CPL). The source operand is a 16-bit register or a memory location that contains the segment selector for the segment to be verified. If the segment is accessible and readable (VERR) or writable (VERW), the ZF flag is set; otherwise, the ZF flag is cleared. Code segments are never verified as writable. This check cannot be performed on system segments.</p><p>To set the ZF flag, the following conditions must be met:</p><p>The validation performed is the same as is performed when a segment selector is loaded into the DS, ES, FS, or GS register, and the indicated access (read or write) is performed. The segment selector's value cannot result in a protection exception, enabling the software to anticipate possible segment access problems.</p><p>This instructionâ€™s operation is the same in non-64-bit modes and 64-bit mode. The operand size is fixed at 16 bits.</p>","href":"https://www.felixcloutier.com/x86/VERR%3AVERW.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}