{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vcvtusi2ss",
    "result": {"pageContext":{"op":{"id":"vcvtusi2ss","variants":["VCVTUSI2SS"],"variant_descriptions":{"VCVTUSI2SS":"Convert one signed quadword integer from r/m64 to one single-precision floating-point value in xmm1."},"text":"<p>Converts a unsigned doubleword integer (or unsigned quadword integer if operand size is 64 bits) in the source operand (second operand) to a single-precision floating-point value in the destination operand (first operand). The source operand can be a general-purpose register or a memory location. The destination operand is an XMM register. The result is stored in the low doubleword of the destination operand. When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register or the embedded rounding control bits.</p><p>The second source operand can be a general-purpose register or a 32/64-bit memory location. The first source and destination operands are XMM registers. Bits (127:32) of the XMM register destination are copied from corresponding bits in the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed.</p><p>EVEX.W1 version: promotes the instruction to use 64-bit input value in 64-bit mode.</p>","href":"https://www.felixcloutier.com/x86/VCVTUSI2SS.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}