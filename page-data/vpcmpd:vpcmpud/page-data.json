{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpcmpd:vpcmpud",
    "result": {"pageContext":{"op":{"id":"vpcmpd:vpcmpud","variants":["VPCMPD","VPCMPUD"],"variant_descriptions":{"VPCMPD":"Compare packed signed doubleword integer values in zmm2 and zmm3/m512/m32bcst using bits 2:0 of imm8 as a comparison predicate. The comparison results are written to the destination k1 under writemask k2.","VPCMPUD":"Compare packed unsigned doubleword integer values in zmm2 and zmm3/m512/m32bcst using bits 2:0 of imm8 as a comparison predicate. The comparison results are written to the destination k1 under writemask k2."},"text":"<p>Performs a SIMD compare of the packed integer values in the second source operand and the first source operand and returns the results of the comparison to the mask destination operand. The comparison predicate operand (immediate byte) specifies the type of comparison performed on each pair of packed values in the two source operands. The result of each comparison is a single mask bit result of 1 (comparison true) or 0 (comparison false).</p><p>VPCMPD/VPCMPUD performs a comparison between pairs of signed/unsigned doubleword integer values.</p><p>The first source operand (second operand) is a ZMM/YMM/XMM register. The second source operand can be a ZMM/YMM/XMM register or a 512/256/128-bit memory location or a 512-bit vector broadcasted from a 32-bit memory location. The destination operand (first operand) is a mask register k1. Up to 16/8/4 comparisons are performed with results written to the destination operand under the writemask k2.</p><p>The comparison predicate operand is an 8-bit immediate: bits 2:0 define the type of comparison to be performed. Bits 3 through 7 of the immediate are reserved. Compiler can implement the pseudo-op mnemonic listed in Table 5-17.</p>","href":"https://www.felixcloutier.com/x86/VPCMPD%3AVPCMPUD.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}