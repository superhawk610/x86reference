{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/cvttps2pi",
    "result": {"pageContext":{"op":{"id":"cvttps2pi","variants":["CVTTPS2PI"],"variant_descriptions":{"CVTTPS2PI":"Convert two single-precision floating-point values from xmm/m64 to two signed doubleword signed integers in mm using truncation."},"text":"<p>Converts two packed single-precision floating-point values in the source operand (second operand) to two packed signed doubleword integers in the destination operand (first operand). The source operand can be an XMM register or a 64-bit memory location. The destination operand is an MMX technology register. When the source operand is an XMM register, the two single-precision floating-point values are contained in the low quadword of the register.</p><p>When a conversion is inexact, a truncated (round toward zero) result is returned. If a converted result is larger than the maximum signed doubleword integer, the floating-point invalid exception is raised, and if this exception is masked, the indefinite integer value (80000000H) is returned.</p><p>This instruction causes a transition from x87 FPU to MMX technology operation (that is, the x87 FPU top-of-stack pointer is set to 0 and the x87 FPU tag word is set to all 0s [valid]). If this instruction is executed while an x87 FPU floating-point exception is pending, the exception is handled before the CVTTPS2PI instruction is executed.</p><p>In 64-bit mode, use of the REX.R prefix permits this instruction to access additional registers (XMM8-XMM15).</p>","href":"https://www.felixcloutier.com/x86/CVTTPS2PI.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}