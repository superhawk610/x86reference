{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/cvtdq2pd",
    "result": {"pageContext":{"op":{"id":"cvtdq2pd","variants":["CVTDQ2PD","VCVTDQ2PD"],"variant_descriptions":{"CVTDQ2PD":"Convert two packed signed doubleword integers from xmm2/mem to two packed double-precision floating-point values in xmm1.","VCVTDQ2PD":"Convert eight packed signed doubleword integers from ymm2/m256/m32bcst to eight packed double-precision floating-point values in zmm1 with writemask k1."},"text":"<p>Converts two, four or eight packed signed doubleword integers in the source operand (the second operand) to two, four or eight packed double-precision floating-point values in the destination operand (the first operand).</p><p>EVEX encoded versions: The source operand can be a YMM/XMM/XMM (low 64 bits) register, a 256/128/64-bit memory location or a 256/128/64-bit vector broadcasted from a 32-bit memory location. The destination operand is a ZMM/YMM/XMM register conditionally updated with writemask k1. Attempt to encode this instruction with EVEX embedded rounding is ignored.</p><p>VEX.256 encoded version: The source operand is an XMM register or 128- bit memory location. The destination operand is a YMM register.</p><p>VEX.128 encoded version: The source operand is an XMM register or 64- bit memory location. The destination operand is a XMM register. The upper Bits (MAXVL-1:128) of the corresponding ZMM register destination are zeroed.</p><p>128-bit Legacy SSE version: The source operand is an XMM register or 64- bit memory location. The destination operand is an XMM register. The upper Bits (MAXVL-1:128) of the corresponding ZMM register destination are unmodified.</p><p>VEX.vvvv and EVEX.vvvv are reserved and must be 1111b, otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/CVTDQ2PD.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}