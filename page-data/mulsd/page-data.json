{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/mulsd",
    "result": {"pageContext":{"op":{"id":"mulsd","variants":["MULSD","VMULSD"],"variant_descriptions":{"MULSD":"Multiply the low double-precision floating-point value in xmm2/m64 by low double-precision floating-point value in xmm1.","VMULSD":"Multiply the low double-precision floating-point value in xmm3/m64 by low double-precision floating-point value in xmm2."},"text":"<p>Multiplies the low double-precision floating-point value in the second source operand by the low double-precision floating-point value in the first source operand, and stores the double-precision floating-point result in the destination operand. The second source operand can be an XMM register or a 64-bit memory location. The first source operand and the destination operands are XMM registers.</p><p>128-bit Legacy SSE version: The first source operand and the destination operand are the same. Bits (MAXVL-1:64) of the corresponding destination register remain unchanged.</p><p>VEX.128 and EVEX encoded version: The quadword at bits 127:64 of the destination operand is copied from the same bits of the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed.</p><p>EVEX encoded version: The low quadword element of the destination operand is updated according to the writemask.</p><p>Software should ensure VMULSD is encoded with VEX.L=0. Encoding VMULSD with VEX.L=1 may encounter unpredictable behavior across different processor generations.</p>","href":"https://www.felixcloutier.com/x86/MULSD.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}