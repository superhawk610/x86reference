{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/movmskpd",
    "result": {"pageContext":{"op":{"id":"movmskpd","variants":["MOVMSKPD","VMOVMSKPD"],"variant_descriptions":{"MOVMSKPD":"Extract 2-bit sign mask from xmm and store in reg. The upper bits of r32 or r64 are filled with zeros.","VMOVMSKPD":"Extract 4-bit sign mask from ymm2 and store in reg. The upper bits of r32 or r64 are zeroed."},"text":"<p>Extracts the sign bits from the packed double-precision floating-point values in the source operand (second operand), formats them into a 2-bit mask, and stores the mask in the destination operand (first operand). The source operand is an XMM register, and the destination operand is a general-purpose register. The mask is stored in the 2 low-order bits of the destination operand. Zero-extend the upper bits of the destination.</p><p>In 64-bit mode, the instruction can access additional registers (XMM8-XMM15, R8-R15) when used with a REX.R prefix. The default operand size is 64-bit in 64-bit mode.</p><p>128-bit versions: The source operand is a YMM register. The destination operand is a general purpose register.</p><p>VEX.256 encoded version: The source operand is a YMM register. The destination operand is a general purpose register.</p><p>Note: In VEX-encoded versions, VEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/MOVMSKPD.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}