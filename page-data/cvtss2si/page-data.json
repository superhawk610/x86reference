{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/cvtss2si",
    "result": {"pageContext":{"op":{"id":"cvtss2si","variants":["CVTSS2SI","VCVTSS2SI"],"variant_descriptions":{"CVTSS2SI":"Convert one single-precision floating-point value from xmm1/m32 to one signed quadword integer in r64.","VCVTSS2SI":"Convert one single-precision floating-point value from xmm1/m32 to one signed quadword integer in r64."},"text":"<p>Converts a single-precision floating-point value in the source operand (the second operand) to a signed doubleword integer (or signed quadword integer if operand size is 64 bits) in the destination operand (the first operand). The source operand can be an XMM register or a memory location. The destination operand is a general-purpose register. When the source operand is an XMM register, the single-precision floating-point value is contained in the low doubleword of the register.</p><p>When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register or the embedded rounding control bits. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the indefinite integer value (2<sup>w-1</sup>, where w represents the number of bits in the destination format) is returned.</p><p>Legacy SSE instructions: In 64-bit mode, Use of the REX.W prefix promotes the instruction to produce 64-bit data. See the summary chart at the beginning of this section for encoding data and limits.</p><p>VEX.W1 and EVEX.W1 versions: promotes the instruction to produce 64-bit data in 64-bit mode.</p><p>Note: VEX.vvvv and EVEX.vvvv are reserved and must be 1111b, otherwise instructions will #UD.</p><p>Software should ensure VCVTSS2SI is encoded with VEX.L=0. Encoding VCVTSS2SI with VEX.L=1 may encounter unpredictable behavior across different processor generations.</p>","href":"https://www.felixcloutier.com/x86/CVTSS2SI.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}