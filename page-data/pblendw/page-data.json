{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/pblendw",
    "result": {"pageContext":{"op":{"id":"pblendw","variants":["VPBLENDW","PBLENDW"],"variant_descriptions":{"PBLENDW":"Select words from xmm1 and xmm2/m128 from mask specified in imm8 and store the values into xmm1.","VPBLENDW":"Select words from ymm2 and ymm3/m256 from mask specified in imm8 and store the values into ymm1."},"text":"<p>Words from the source operand (second operand) are conditionally written to the destination operand (first operand) depending on bits in the immediate operand (third operand). The immediate bits (bits 7:0) form a mask that determines whether the corresponding word in the destination is copied from the source. If a bit in the mask, corresponding to a word, is â€œ1\", then the word is copied, else the word element in the destination operand is unchanged.</p><p>128-bit Legacy SSE version: The second source operand can be an XMM register or a 128-bit memory location. The first source and destination operands are XMM registers. Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged.</p><p>VEX.128 encoded version: The second source operand can be an XMM register or a 128-bit memory location. The first source and destination operands are XMM registers. Bits (MAXVL-1:128) of the corresponding YMM register are zeroed.</p><p>VEX.256 encoded version: The first source operand is a YMM register. The second source operand is a YMM register or a 256-bit memory location. The destination operand is a YMM register.</p>","href":"https://www.felixcloutier.com/x86/PBLENDW.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}