{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpblendmd:vpblendmq",
    "result": {"pageContext":{"op":{"id":"vpblendmd:vpblendmq","variants":["VPBLENDMQ","VPBLENDMD"],"variant_descriptions":{"VPBLENDMD":"Blend doubleword integer vector zmm2 and doubleword vector zmm3/m512/m32bcst and store the result in zmm1, under control mask.","VPBLENDMQ":"Blend quadword integer vector zmm2 and quadword vector zmm3/m512/m64bcst and store the result in zmm1, under control mask."},"text":"<p>Performs an element-by-element blending of dword/qword elements between the first source operand (the second operand) and the elements of the second source operand (the third operand) using an opmask register as select control. The blended result is written into the destination.</p><p>The destination and first source operands are ZMM registers. The second source operand can be a ZMM register, a 512-bit memory location or a 512-bit vector broadcasted from a 32-bit memory location.</p><p>The opmask register is not used as a writemask for this instruction. Instead, the mask is used as an element selector: every element of the destination is conditionally selected between first source or second source using the value of the related mask bit (0 for the first source operand, 1 for the second source operand).</p><p>If EVEX.z is set, the elements with corresponding mask bit value of 0 in the destination operand are zeroed.</p>","href":"https://www.felixcloutier.com/x86/VPBLENDMD%3AVPBLENDMQ.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}