{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/bndmk",
    "result": {"pageContext":{"op":{"id":"bndmk","variants":["BNDMK"],"variant_descriptions":{"BNDMK":"Make lower and upper bounds from m64 and store them in bnd."},"text":"<p>Makes bounds from the second operand and stores the lower and upper bounds in the bound register bnd. The second operand must be a memory operand. The content of the base register from the memory operand is stored in the lower bound bnd.LB. The 1's complement of the effective address of m32/m64 is stored in the upper bound b.UB. Computation of m32/m64 has identical behavior to LEA.</p><p>This instruction does not cause any memory access, and does not read or write any flags.</p><p>If the instruction did not specify base register, the lower bound will be zero. The reg-reg form of this instruction retains legacy behavior (NOP).</p><p>The instruction causes an invalid-opcode exception (#UD) if executed in 64-bit mode with RIP-relative addressing.</p>","href":"https://www.felixcloutier.com/x86/BNDMK.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}