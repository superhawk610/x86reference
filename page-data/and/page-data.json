{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/and",
    "result": {"pageContext":{"op":{"id":"and","variants":["AND"],"variant_descriptions":{"AND":"r64 AND r/m64."},"text":"<p>Performs a bitwise AND operation on the destination (first) and source (second) operands and stores the result in the destination operand location. The source operand can be an immediate, a register, or a memory location; the destination operand can be a register or a memory location. (However, two memory operands cannot be used in one instruction.) Each bit of the result is set to 1 if both corresponding bits of the first and second operands are 1; otherwise, it is set to 0.</p><p>This instruction can be used with a LOCK prefix to allow the it to be executed atomically.</p><p>In 64-bit mode, the instructionâ€™s default operation size is 32 bits. Using a REX prefix in the form of REX.R permits access to additional registers (R8-R15). Using a REX prefix in the form of REX.W promotes operation to 64 bits. See the summary chart at the beginning of this section for encoding data and limits.</p>","href":"https://www.felixcloutier.com/x86/AND.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}