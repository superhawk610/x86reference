{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/cvtss2sd",
    "result": {"pageContext":{"op":{"id":"cvtss2sd","variants":["CVTSS2SD","VCVTSS2SD"],"variant_descriptions":{"CVTSS2SD":"Convert one single-precision floating-point value in xmm2/m32 to one double-precision floating-point value in xmm1.","VCVTSS2SD":"Convert one single-precision floating-point value in xmm3/m32 to one double-precision floating-point value and merge with high bits of xmm2 under writemask k1."},"text":"<p>Converts a single-precision floating-point value in the “convert-from” source operand to a double-precision floating-point value in the destination operand. When the “convert-from” source operand is an XMM register, the single-precision floating-point value is contained in the low doubleword of the register. The result is stored in the low quadword of the destination operand.</p><p>128-bit Legacy SSE version: The “convert-from” source operand (the second operand) is an XMM register or memory location. Bits (MAXVL-1:64) of the corresponding destination register remain unchanged. The destination operand is an XMM register.</p><p>VEX.128 and EVEX encoded versions: The “convert-from” source operand (the third operand) can be an XMM register or a 32-bit memory location. The first source and destination operands are XMM registers. Bits (127:64) of the XMM register destination are copied from the corresponding bits in the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed.</p><p>Software should ensure VCVTSS2SD is encoded with VEX.L=0. Encoding VCVTSS2SD with VEX.L=1 may encounter unpredictable behavior across different processor generations.</p>","href":"https://www.felixcloutier.com/x86/CVTSS2SD.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}