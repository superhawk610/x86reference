{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/pext",
    "result": {"pageContext":{"op":{"id":"pext","variants":["PEXT"],"variant_descriptions":{"PEXT":"Parallel extract of bits from r64b using mask in r/m64, result is written to r64a."},"text":"<p>PEXT uses a mask in the second source operand (the third operand) to transfer either contiguous or non-contiguous bits in the first source operand (the second operand) to contiguous low order bit positions in the destination (the first operand). For each bit set in the MASK, PEXT extracts the corresponding bits from the first source operand and writes them into contiguous lower bits of destination operand. The remaining upper bits of destination are zeroed.</p><p>This instruction is not supported in real mode and virtual-8086 mode. The operand size is always 32 bits if not in 64-bit mode. In 64-bit mode operand size 64 requires VEX.W1. VEX.W1 is ignored in non-64-bit modes. An attempt to execute this instruction with VEX.L not equal to 0 will cause #UD.</p>","href":"https://www.felixcloutier.com/x86/PEXT.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}