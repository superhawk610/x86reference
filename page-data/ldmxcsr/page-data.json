{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/ldmxcsr",
    "result": {"pageContext":{"op":{"id":"ldmxcsr","variants":["LDMXCSR","VLDMXCSR"],"variant_descriptions":{"LDMXCSR":"Load MXCSR register from m32.","VLDMXCSR":"Load MXCSR register from m32."},"text":"<p>Loads the source operand into the MXCSR control/status register. The source operand is a 32-bit memory location. See “MXCSR Control and Status Register” in Chapter 10, of the <em>Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1</em>, for a description of the MXCSR register and its contents.</p><p>The LDMXCSR instruction is typically used in conjunction with the (V)STMXCSR instruction, which stores the contents of the MXCSR register in memory.</p><p>The default MXCSR value at reset is 1F80H.</p><p>If a (V)LDMXCSR instruction clears a SIMD floating-point exception mask bit and sets the corresponding exception flag bit, a SIMD floating-point exception will not be immediately generated. The exception will be generated only upon the execution of the next instruction that meets both conditions below:</p><p>This instruction’s operation is the same in non-64-bit modes and 64-bit mode.</p><p>If VLDMXCSR is encoded with VEX.L= 1, an attempt to execute the instruction encoded with VEX.L= 1 will cause an #UD exception.</p><p>Note: In VEX-encoded versions, VEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/LDMXCSR.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}