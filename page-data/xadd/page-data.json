{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/xadd",
    "result": {"pageContext":{"op":{"id":"xadd","variants":["XADD"],"variant_descriptions":{"XADD":"Exchange r64 and r/m64; load sum into r/m64."},"text":"<p>Exchanges the first operand (destination operand) with the second operand (source operand), then loads the sum of the two values into the destination operand. The destination operand can be a register or a memory location; the source operand is a register.</p><p>In 64-bit mode, the instructionâ€™s default operation size is 32 bits. Using a REX prefix in the form of REX.R permits access to additional registers (R8-R15). Using a REX prefix in the form of REX.W promotes operation to 64 bits. See the summary chart at the beginning of this section for encoding data and limits.</p><p>This instruction can be used with a LOCK prefix to allow the instruction to be executed atomically.</p><p>IA-32 processors earlier than the Intel486 processor do not recognize this instruction. If this instruction is used, you should provide an equivalent code sequence that runs on earlier processors.</p>","href":"https://www.felixcloutier.com/x86/XADD.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}