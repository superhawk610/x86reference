{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/fld1:fldl2t:fldl2e:fldpi:fldlg2:fldln2:fldz",
    "result": {"pageContext":{"op":{"id":"fld1:fldl2t:fldl2e:fldpi:fldlg2:fldln2:fldz","variants":["FLDL2T","FLDLG2","FLDLN2","FLDZ","FLDPI","FLD1","FLDL2E"],"variant_descriptions":{"FLD1":"Push +1.0 onto the FPU register stack.","FLDL2T":"Push log210 onto the FPU register stack.","FLDL2E":"Push log2e onto the FPU register stack.","FLDPI":"Push π onto the FPU register stack.","FLDLG2":"Push log102 onto the FPU register stack.","FLDLN2":"Push loge2 onto the FPU register stack.","FLDZ":"Push +0.0 onto the FPU register stack."},"text":"<p>Push one of seven commonly used constants (in double extended-precision floating-point format) onto the FPU register stack. The constants that can be loaded with these instructions include +1.0, +0.0, log<sub>2</sub>10, log<sub>2</sub>e, π, log<sub>10</sub>2, and log<sub>e</sub>2. For each constant, an internal 66-bit constant is rounded (as specified by the RC field in the FPU control word) to double extended-precision floating-point format. The inexact-result exception (#P) is not generated as a result of the rounding, nor is the C1 flag set in the x87 FPU status word if the value is rounded up.</p><p>See the section titled “Approximation of Pi” in Chapter 8 of the <em>Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1</em>, for a description of the π constant.</p><p>This instruction’s operation is the same in non-64-bit modes and 64-bit mode.</p><p>When the RC field is set to round-to-nearest, the FPU produces the same constants that is produced by the Intel 8087 and Intel 287 math coprocessors.</p>","href":"https://www.felixcloutier.com/x86/FLD1%3AFLDL2T%3AFLDL2E%3AFLDPI%3AFLDLG2%3AFLDLN2%3AFLDZ.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}