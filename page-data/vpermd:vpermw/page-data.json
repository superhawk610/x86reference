{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpermd:vpermw",
    "result": {"pageContext":{"op":{"id":"vpermd:vpermw","variants":["VPERMW","VPERMD"],"variant_descriptions":{"VPERMD":"Permute doublewords in zmm3/m512/m32bcst using indices in zmm2 and store the result in zmm1 using writemask k1.","VPERMW":"Permute word integers in zmm3/m512 using indexes in zmm2 and store the result in zmm1 using writemask k1."},"text":"<p>Copies doublewords (or words) from the second source operand (the third operand) to the destination operand (the first operand) according to the indices in the first source operand (the second operand). Note that this instruction permits a doubleword (word) in the source operand to be copied to more than one location in the destination operand.</p><p>VEX.256 encoded VPERMD: The first and second operands are YMM registers, the third operand can be a YMM register or memory location. Bits (MAXVL-1:256) of the corresponding destination register are zeroed.</p><p>EVEX encoded VPERMD: The first and second operands are ZMM/YMM registers, the third operand can be a ZMM/YMM register, a 512/256-bit memory location or a 512/256-bit vector broadcasted from a 32-bit memory location. The elements in the destination are updated using the writemask k1.</p><p>VPERMW: first and second operands are ZMM/YMM/XMM registers, the third operand can be a ZMM/YMM/XMM register, or a 512/256/128-bit memory location. The destination is updated using the writemask k1.</p><p>EVEX.128 encoded versions: Bits (MAXVL-1:128) of the corresponding ZMM register are zeroed.</p>","href":"https://www.felixcloutier.com/x86/VPERMD%3AVPERMW.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}