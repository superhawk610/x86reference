{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/sqrtsd",
    "result": {"pageContext":{"op":{"id":"sqrtsd","variants":["VSQRTSD","SQRTSD"],"variant_descriptions":{"SQRTSD":"Computes square root of the low double-precision floating-point value in xmm2/m64 and stores the results in xmm1.","VSQRTSD":"Computes square root of the low double-precision floating-point value in xmm3/m64 and stores the results in xmm1 under writemask k1. Also, upper double-precision floating-point value (bits[127:64]) from xmm2 is copied to xmm1[127:64]."},"text":"<p>Computes the square root of the low double-precision floating-point value in the second source operand and stores the double-precision floating-point result in the destination operand. The second source operand can be an XMM register or a 64-bit memory location. The first source and destination operands are XMM registers.</p><p>128-bit Legacy SSE version: The first source operand and the destination operand are the same. The quadword at bits 127:64 of the destination operand remains unchanged. Bits (MAXVL-1:64) of the corresponding destination register remain unchanged.</p><p>VEX.128 and EVEX encoded versions: Bits 127:64 of the destination operand are copied from the corresponding bits of the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed.</p><p>EVEX encoded version: The low quadword element of the destination operand is updated according to the writemask.</p><p>Software should ensure VSQRTSD is encoded with VEX.L=0. Encoding VSQRTSD with VEX.L=1 may encounter unpredictable behavior across different processor generations.</p>","href":"https://www.felixcloutier.com/x86/SQRTSD.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}