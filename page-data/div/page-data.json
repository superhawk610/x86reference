{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/div",
    "result": {"pageContext":{"op":{"id":"div","variants":["DIV"],"variant_descriptions":{"DIV":"Unsigned divide RDX:RAX by r/m64, with result stored in RAX ← Quotient, RDX ← Remainder."},"text":"<p>Divides unsigned the value in the AX, DX:AX, EDX:EAX, or RDX:RAX registers (dividend) by the source operand (divisor) and stores the result in the AX (AH:AL), DX:AX, EDX:EAX, or RDX:RAX registers. The source operand can be a general-purpose register or a memory location. The action of this instruction depends on the operand size (dividend/divisor). Division using 64-bit operand is available only in 64-bit mode.</p><p>Non-integral results are truncated (chopped) towards 0. The remainder is always less than the divisor in magnitude. Overflow is indicated with the #DE (divide error) exception rather than with the CF flag.</p><p>In 64-bit mode, the instruction’s default operation size is 32 bits. Use of the REX.R prefix permits access to additional registers (R8-R15). Use of the REX.W prefix promotes operation to 64 bits. In 64-bit mode when REX.W is applied, the instruction divides the unsigned value in RDX:RAX by the source operand and stores the quotient in RAX, the remainder in RDX.</p><p>See the summary chart at the beginning of this section for encoding data and limits. See <a href=\"https://www.felixcloutier.com/x86/DIV.html#tbl-3-15\" rel=\"noreferrer noopener\" target=\"_blank\">Table 3-15</a>.</p>","href":"https://www.felixcloutier.com/x86/DIV.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}