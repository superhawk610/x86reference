{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/fadd:faddp:fiadd",
    "result": {"pageContext":{"op":{"id":"fadd:faddp:fiadd","variants":["FADDP","FIADD","FADD"],"variant_descriptions":{"FADD":"Add ST(i) to ST(0) and store result in ST(i).","FADDP":"Add ST(0) to ST(1), store result in ST(1), and pop the register stack.","FIADD":"Add m16int to ST(0) and store result in ST(0)."},"text":"<p>Adds the destination and source operands and stores the sum in the destination location. The destination operand is always an FPU register; the source operand can be a register or a memory location. Source operands in memory can be in single-precision or double-precision floating-point format or in word or doubleword integer format.</p><p>The no-operand version of the instruction adds the contents of the ST(0) register to the ST(1) register. The one-operand version adds the contents of a memory location (either a floating-point or an integer value) to the contents of the ST(0) register. The two-operand version, adds the contents of the ST(0) register to the ST(i) register or vice versa. The value in ST(0) can be doubled by coding:</p>","href":"https://www.felixcloutier.com/x86/FADD%3AFADDP%3AFIADD.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}