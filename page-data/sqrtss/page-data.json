{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/sqrtss",
    "result": {"pageContext":{"op":{"id":"sqrtss","variants":["VSQRTSS","SQRTSS"],"variant_descriptions":{"SQRTSS":"Computes square root of the low single-precision floating-point value in xmm2/m32 and stores the results in xmm1.","VSQRTSS":"Computes square root of the low single-precision floating-point value in xmm3/m32 and stores the results in xmm1 under writemask k1. Also, upper single-precision floating-point values (bits[127:32]) from xmm2 are copied to xmm1[127:32]."},"text":"<p>Computes the square root of the low single-precision floating-point value in the second source operand and stores the single-precision floating-point result in the destination operand. The second source operand can be an XMM register or a 32-bit memory location. The first source and destination operands is an XMM register.</p><p>128-bit Legacy SSE version: The first source operand and the destination operand are the same. Bits (MAXVL-1:32) of the corresponding YMM destination register remain unchanged.</p><p>VEX.128 and EVEX encoded versions: Bits 127:32 of the destination operand are copied from the corresponding bits of the first source operand. Bits (MAXVL-1:128) of the destination ZMM register are zeroed.</p><p>EVEX encoded version: The low doubleword element of the destination operand is updated according to the writemask.</p><p>Software should ensure VSQRTSS is encoded with VEX.L=0. Encoding VSQRTSS with VEX.L=1 may encounter unpredictable behavior across different processor generations.</p>","href":"https://www.felixcloutier.com/x86/SQRTSS.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}