{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vcvttpd2udq",
    "result": {"pageContext":{"op":{"id":"vcvttpd2udq","variants":["VCVTTPD2UDQ"],"variant_descriptions":{"VCVTTPD2UDQ":"Convert eight packed double-precision floating-point values in zmm2/m512/m64bcst to eight unsigned doubleword integers in ymm1 using truncation subject to writemask k1."},"text":"<p>Converts with truncation packed double-precision floating-point values in the source operand (the second operand) to packed unsigned doubleword integers in the destination operand (the first operand).</p><p>When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the integer value 2<sup>w</sup> â€“ 1 is returned, where w represents the number of bits in the destination format.</p><p>The source operand is a ZMM/YMM/XMM register, a 512/256/128-bit memory location, or a 512/256/128-bit vector broadcasted from a 64-bit memory location. The destination operand is a YMM/XMM/XMM (low 64 bits) register conditionally updated with writemask k1. The upper bits (MAXVL-1:256) of the corresponding destination are zeroed.</p><p>Note: EVEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/VCVTTPD2UDQ.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}