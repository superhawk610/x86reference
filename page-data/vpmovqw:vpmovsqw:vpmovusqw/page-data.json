{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpmovqw:vpmovsqw:vpmovusqw",
    "result": {"pageContext":{"op":{"id":"vpmovqw:vpmovsqw:vpmovusqw","variants":["VPMOVSQW","VPMOVQW","VPMOVUSQW"],"variant_descriptions":{"VPMOVQW":"Converts 8 packed quad-word integers from zmm2 into 8 packed word integers in xmm1/m128 with truncation under writemask k1.","VPMOVSQW":"Converts 8 packed signed quad-word integers from zmm2 into 8 packed signed word integers in xmm1/m128 using signed saturation under writemask k1.","VPMOVUSQW":"Converts 8 packed unsigned quad-word integers from zmm2 into 8 packed unsigned word integers in xmm1/m128 using unsigned saturation under writemask k1."},"text":"<p>VPMOVQW down converts 64-bit integer elements in the source operand (the second operand) into packed words using truncation. VPMOVSQW converts signed 64-bit integers into packed signed words using signed saturation. VPMOVUSQW convert unsigned quad-word values into unsigned word values using unsigned saturation.</p><p>The source operand is a ZMM/YMM/XMM register. The destination operand is a XMM register or a 128/64/32-bit memory location.</p><p>Down-converted word elements are written to the destination operand (the first operand) from the least-significant word. Word elements of the destination operand are updated according to the writemask. Bits (MAXVL-1:128/64/32) of the register destination are zeroed.</p><p>EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/VPMOVQW%3AVPMOVSQW%3AVPMOVUSQW.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}