{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vcvtusi2sd",
    "result": {"pageContext":{"op":{"id":"vcvtusi2sd","variants":["VCVTUSI2SD"],"variant_descriptions":{"VCVTUSI2SD":"Convert one unsigned quadword integer from r/m64 to one double-precision floating-point value in xmm1."},"text":"<p>Converts an unsigned doubleword integer (or unsigned quadword integer if operand size is 64 bits) in the second source operand to a double-precision floating-point value in the destination operand. The result is stored in the low quadword of the destination operand. When conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register.</p><p>The second source operand can be a general-purpose register or a 32/64-bit memory location. The first source and destination operands are XMM registers. Bits (127:64) of the XMM register destination are copied from corresponding bits in the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed.</p><p>EVEX.W1 version: promotes the instruction to use 64-bit input value in 64-bit mode.</p><p>EVEX.W0 version: attempt to encode this instruction with EVEX embedded rounding is ignored.</p>","href":"https://www.felixcloutier.com/x86/VCVTUSI2SD.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}