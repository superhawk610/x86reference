{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/fstcw:fnstcw",
    "result": {"pageContext":{"op":{"id":"fstcw:fnstcw","variants":["FNSTCW","FSTCW"],"variant_descriptions":{"FSTCW":"Store FPU control word to m2byte after checking for pending unmasked floating-point exceptions.","FNSTCW":"Store FPU control word to m2byte without checking for pending unmasked floating-point exceptions."},"text":"<p>Stores the current value of the FPU control word at the specified destination in memory. The FSTCW instruction checks for and handles pending unmasked floating-point exceptions before storing the control word; the FNSTCW instruction does not.</p><p>The assembler issues two instructions for the FSTCW instruction (an FWAIT instruction followed by an FNSTCW instruction), and the processor executes each of these instructions in separately. If an exception is generated for either of these instructions, the save EIP points to the instruction that caused the exception.</p><p>This instruction’s operation is the same in non-64-bit modes and 64-bit mode.</p><p>When operating a Pentium or Intel486 processor in MS-DOS compatibility mode, it is possible (under unusual circumstances) for an FNSTCW instruction to be interrupted prior to being executed to handle a pending FPU exception. See the section titled “No-Wait FPU Instructions Can Get FPU Interrupt in Window” in Appendix D of the <em>Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1</em>, for a description of these circumstances. An FNSTCW instruction cannot be interrupted in this way on later Intel processors, except for the Intel Quark<sup>TM</sup> X1000 processor.</p>","href":"https://www.felixcloutier.com/x86/FSTCW%3AFNSTCW.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}