{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vcvttpd2uqq",
    "result": {"pageContext":{"op":{"id":"vcvttpd2uqq","variants":["VCVTTPD2UQQ"],"variant_descriptions":{"VCVTTPD2UQQ":"Convert eight packed double-precision floating-point values from zmm2/mem to eight packed unsigned quadword integers in zmm1 using truncation with writemask k1."},"text":"<p>Converts with truncation packed double-precision floating-point values in the source operand (second operand) to packed unsigned quadword integers in the destination operand (first operand).</p><p>When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the integer value 2<sup>w</sup> â€“ 1 is returned, where w represents the number of bits in the destination format.</p><p>EVEX encoded versions: The source operand is a ZMM/YMM/XMM register or a 512/256/128-bit memory location. The destination operation is a ZMM/YMM/XMM register conditionally updated with writemask k1.</p><p>Note: EVEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/VCVTTPD2UQQ.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}