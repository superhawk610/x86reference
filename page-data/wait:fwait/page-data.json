{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/wait:fwait",
    "result": {"pageContext":{"op":{"id":"wait:fwait","variants":["FWAIT","WAIT"],"variant_descriptions":{"WAIT":"Check pending unmasked floating-point exceptions.","FWAIT":"Check pending unmasked floating-point exceptions."},"text":"<p>Causes the processor to check for and handle pending, unmasked, floating-point exceptions before proceeding. (FWAIT is an alternate mnemonic for WAIT.)</p><p>This instruction is useful for synchronizing exceptions in critical sections of code. Coding a WAIT instruction after a floating-point instruction ensures that any unmasked floating-point exceptions the instruction may raise are handled before the processor can modify the instruction’s results. See the section titled “Floating-Point Exception Synchronization” in Chapter 8 of the <em>Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1</em>, for more information on using the WAIT/FWAIT instruction.</p><p>This instruction’s operation is the same in non-64-bit modes and 64-bit mode.</p>","href":"https://www.felixcloutier.com/x86/WAIT%3AFWAIT.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}