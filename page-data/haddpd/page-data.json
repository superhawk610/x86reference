{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/haddpd",
    "result": {"pageContext":{"op":{"id":"haddpd","variants":["VHADDPD","HADDPD"],"variant_descriptions":{"HADDPD":"Horizontal add packed double-precision floating-point values from xmm2/m128 to xmm1.","VHADDPD":"Horizontal add packed double-precision floating-point values from ymm2 and ymm3/mem."},"text":"<p>Adds the double-precision floating-point values in the high and low quadwords of the destination operand and stores the result in the low quadword of the destination operand.</p><p>Adds the double-precision floating-point values in the high and low quadwords of the source operand and stores the result in the high quadword of the destination operand.</p><p>In 64-bit mode, use of the REX.R prefix permits this instruction to access additional registers (XMM8-XMM15).</p><p>See <a href=\"https://www.felixcloutier.com/x86/HADDPD.html#fig-3-16\" rel=\"noreferrer noopener\" target=\"_blank\">Figure 3-16</a> for HADDPD; see <a href=\"https://www.felixcloutier.com/x86/HADDPD.html#fig-3-17\" rel=\"noreferrer noopener\" target=\"_blank\">Figure 3-17</a> for VHADDPD.</p><p>128-bit Legacy SSE version: The second source can be an XMM register or an 128-bit memory location. The destination is not distinct from the first source XMM register and the upper bits (MAXVL-1:128) of the corresponding YMM register destination are unmodified.</p><p>VEX.128 encoded version: the first source operand is an XMM register or 128-bit memory location. The destination operand is an XMM register. The upper bits (MAXVL-1:128) of the corresponding YMM register destination are zeroed.</p><p>VEX.256 encoded version: The first source operand is a YMM register. The second source operand can be a YMM register or a 256-bit memory location. The destination operand is a YMM register.</p>","href":"https://www.felixcloutier.com/x86/HADDPD.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}