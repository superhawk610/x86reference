{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpmovm2b:vpmovm2w:vpmovm2d:vpmovm2q",
    "result": {"pageContext":{"op":{"id":"vpmovm2b:vpmovm2w:vpmovm2d:vpmovm2q","variants":["VPMOVM2B","VPMOVM2D","VPMOVM2Q","VPMOVM2W"],"variant_descriptions":{"VPMOVM2B":"Sets each byte in ZMM1 to all 1’s or all 0’s based on the value of the corresponding bit in k1.","VPMOVM2W":"Sets each word in ZMM1 to all 1’s or all 0’s based on the value of the corresponding bit in k1.","VPMOVM2D":"Sets each doubleword in ZMM1 to all 1’s or all 0’s based on the value of the corresponding bit in k1.","VPMOVM2Q":"Sets each quadword in ZMM1 to all 1’s or all 0’s based on the value of the corresponding bit in k1."},"text":"<p>Converts a mask register to a vector register. Each element in the destination register is set to all 1’s or all 0’s depending on the value of the corresponding bit in the source mask register.</p><p>The source operand is a mask register. The destination operand is a ZMM/YMM/XMM register.</p><p>EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/VPMOVM2B%3AVPMOVM2W%3AVPMOVM2D%3AVPMOVM2Q.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}