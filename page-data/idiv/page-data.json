{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/idiv",
    "result": {"pageContext":{"op":{"id":"idiv","variants":["IDIV"],"variant_descriptions":{"IDIV":"Signed divide RDX:RAX by r/m64, with result stored in RAX ← Quotient, RDX ← Remainder."},"text":"<p>Divides the (signed) value in the AX, DX:AX, or EDX:EAX (dividend) by the source operand (divisor) and stores the result in the AX (AH:AL), DX:AX, or EDX:EAX registers. The source operand can be a general-purpose register or a memory location. The action of this instruction depends on the operand size (dividend/divisor).</p><p>Non-integral results are truncated (chopped) towards 0. The remainder is always less than the divisor in magnitude. Overflow is indicated with the #DE (divide error) exception rather than with the CF flag.</p><p>In 64-bit mode, the instruction’s default operation size is 32 bits. Use of the REX.R prefix permits access to additional registers (R8-R15). Use of the REX.W prefix promotes operation to 64 bits. In 64-bit mode when REX.W is applied, the instruction divides the signed value in RDX:RAX by the source operand. RAX contains a 64-bit quotient; RDX contains a 64-bit remainder.</p><p>See the summary chart at the beginning of this section for encoding data and limits. See <a href=\"https://www.felixcloutier.com/x86/IDIV.html#tbl-3-51\" rel=\"noreferrer noopener\" target=\"_blank\">Table 3-51</a>.</p>","href":"https://www.felixcloutier.com/x86/IDIV.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}