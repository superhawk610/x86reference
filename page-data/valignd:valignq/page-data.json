{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/valignd:valignq",
    "result": {"pageContext":{"op":{"id":"valignd:valignq","variants":["VALIGND","VALIGNQ"],"variant_descriptions":{"VALIGND":"Shift right and merge vectors zmm2 and zmm3/m512/m32bcst with double-word granularity using imm8 as number of elements to shift, and store the final result in zmm1, under writemask.","VALIGNQ":"Shift right and merge vectors zmm2 and zmm3/m512/m64bcst with quad-word granularity using imm8 as number of elements to shift, and store the final result in zmm1, under writemask."},"text":"<p>Concatenates and shifts right doubleword/quadword elements of the first source operand (the second operand) and the second source operand (the third operand) into a 1024/512/256-bit intermediate vector. The low 512/256/128-bit of the intermediate vector is written to the destination operand (the first operand) using the writemask k1. The destination and first source operands are ZMM/YMM/XMM registers. The second source operand can be a ZMM/YMM/XMM register, a 512/256/128-bit memory location or a 512/256/128-bit vector broadcasted from a 32/64-bit memory location.</p><p>This instruction is writemasked, so only those elements with the corresponding bit set in vector mask register k1 are computed and stored into zmm1. Elements in zmm1 with the corresponding bit clear in k1 retain their previous values (merging-masking) or are set to 0 (zeroing-masking).</p>","href":"https://www.felixcloutier.com/x86/VALIGND%3AVALIGNQ.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}