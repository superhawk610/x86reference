{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/prefetchh",
    "result": {"pageContext":{"op":{"id":"prefetchh","variants":["PREFETCHT1","PREFETCHT2","PREFETCHNTA","PREFETCHT0"],"variant_descriptions":{"PREFETCHT0":"Move data from m8 closer to the processor using T0 hint.","PREFETCHT1":"Move data from m8 closer to the processor using T1 hint.","PREFETCHT2":"Move data from m8 closer to the processor using T2 hint.","PREFETCHNTA":"Move data from m8 closer to the processor using NTA hint."},"text":"<p>Fetches the line of data from memory that contains the byte specified with the source operand to a location in the cache hierarchy specified by a locality hint:</p><p>The source operand is a byte memory location. (The locality hints are encoded into the machine level instruction using bits 3 through 5 of the ModR/M byte.)</p><p>If the line selected is already present in the cache hierarchy at a level closer to the processor, no data movement occurs. Prefetches from uncacheable or WC memory are ignored.</p><p>The PREFETCH<em>h</em> instruction is merely a hint and does not affect program behavior. If executed, this instruction moves data closer to the processor in anticipation of future use.</p><p>The implementation of prefetch locality hints is implementation-dependent, and can be overloaded or ignored by a processor implementation. The amount of data prefetched is also processor implementation-dependent. It will, however, be a minimum of 32 bytes. Additional details of the implementation-dependent locality hints are described in Section 7.4 of <em>Intel® 64 and IA-32 Architectures Optimization Reference Manual</em>.</p><p>It should be noted that processors are free to speculatively fetch and cache data from system memory regions that are assigned a memory-type that permits speculative reads (that is, the WB, WC, and WT memory types). A PREFETCH<em>h</em> instruction is considered a hint to this speculative behavior. Because this speculative fetching can occur at any time and is not tied to instruction execution, a PREFETCH<em>h</em> instruction is not ordered with respect to the fence instructions (MFENCE, SFENCE, and LFENCE) or locked memory references. A PREFETCH<em>h</em> instruction is also unordered with respect to CLFLUSH and CLFLUSHOPT instructions, other PREFETCH<em>h</em> instructions, or any other general instruction. It is ordered with respect to serializing instructions such as CPUID, WRMSR, OUT, and MOV CR.</p><p>This instruction’s operation is the same in non-64-bit modes and 64-bit mode.</p>","href":"https://www.felixcloutier.com/x86/PREFETCHh.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}