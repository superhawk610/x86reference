{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vcvtps2uqq",
    "result": {"pageContext":{"op":{"id":"vcvtps2uqq","variants":["VCVTPS2UQQ"],"variant_descriptions":{"VCVTPS2UQQ":"Convert eight packed single precision floating-point values from ymm2/m256/m32bcst to eight packed unsigned quadword values in zmm1 subject to writemask k1."},"text":"<p>Converts up to eight packed single-precision floating-point values in the source operand to unsigned quadword integers in the destination operand.</p><p>When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register or the embedded rounding control bits. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the integer value 2<sup>w</sup> â€“ 1 is returned, where w represents the number of bits in the destination format.</p><p>The source operand is a YMM/XMM/XMM (low 64- bits) register or a 256/128/64-bit memory location. The destination operation is a ZMM/YMM/XMM register conditionally updated with writemask k1.</p><p>EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/VCVTPS2UQQ.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}