{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/mulss",
    "result": {"pageContext":{"op":{"id":"mulss","variants":["MULSS","VMULSS"],"variant_descriptions":{"MULSS":"Multiply the low single-precision floating-point value in xmm2/m32 by the low single-precision floating-point value in xmm1.","VMULSS":"Multiply the low single-precision floating-point value in xmm3/m32 by the low single-precision floating-point value in xmm2."},"text":"<p>Multiplies the low single-precision floating-point value from the second source operand by the low single-precision floating-point value in the first source operand, and stores the single-precision floating-point result in the destination operand. The second source operand can be an XMM register or a 32-bit memory location. The first source operand and the destination operands are XMM registers.</p><p>128-bit Legacy SSE version: The first source operand and the destination operand are the same. Bits (MAXVL-1:32) of the corresponding YMM destination register remain unchanged.</p><p>VEX.128 and EVEX encoded version: The first source operand is an xmm register encoded by VEX.vvvv. The three high-order doublewords of the destination operand are copied from the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed.</p><p>EVEX encoded version: The low doubleword element of the destination operand is updated according to the writemask.</p><p>Software should ensure VMULSS is encoded with VEX.L=0. Encoding VMULSS with VEX.L=1 may encounter unpredictable behavior across different processor generations.</p>","href":"https://www.felixcloutier.com/x86/MULSS.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}