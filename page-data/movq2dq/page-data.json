{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/movq2dq",
    "result": {"pageContext":{"op":{"id":"movq2dq","variants":["MOVQ2DQ"],"variant_descriptions":{"MOVQ2DQ":"Move quadword from mmx to low quadword of xmm."},"text":"<p>Moves the quadword from the source operand (second operand) to the low quadword of the destination operand (first operand). The source operand is an MMX technology register and the destination operand is an XMM register.</p><p>This instruction causes a transition from x87 FPU to MMX technology operation (that is, the x87 FPU top-of-stack pointer is set to 0 and the x87 FPU tag word is set to all 0s [valid]). If this instruction is executed while an x87 FPU floating-point exception is pending, the exception is handled before the MOVQ2DQ instruction is executed.</p><p>In 64-bit mode, use of the REX.R prefix permits this instruction to access additional registers (XMM8-XMM15).</p>","href":"https://www.felixcloutier.com/x86/MOVQ2DQ.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}