{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vcvtsd2usi",
    "result": {"pageContext":{"op":{"id":"vcvtsd2usi","variants":["VCVTSD2USI"],"variant_descriptions":{"VCVTSD2USI":"Convert one double-precision floating-point value from xmm1/m64 to one unsigned quadword integer zero-extended into r64."},"text":"<p>Converts a double-precision floating-point value in the source operand (the second operand) to an unsigned doubleword integer in the destination operand (the first operand). The source operand can be an XMM register or a 64-bit memory location. The destination operand is a general-purpose register. When the source operand is an XMM register, the double-precision floating-point value is contained in the low quadword of the register.</p><p>When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register or the embedded rounding control bits. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the integer value 2<sup>w</sup> â€“ 1 is returned, where w represents the number of bits in the destination format.</p>","href":"https://www.felixcloutier.com/x86/VCVTSD2USI.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}