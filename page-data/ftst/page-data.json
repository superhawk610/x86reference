{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/ftst",
    "result": {"pageContext":{"op":{"id":"ftst","variants":["FTST"],"variant_descriptions":{"FTST":"Compare ST(0) with 0.0."},"text":"<p>Compares the value in the ST(0) register with 0.0 and sets the condition code flags C0, C2, and C3 in the FPU status word according to the results (see table below).</p><p>This instruction performs an “unordered comparison.” An unordered comparison also checks the class of the numbers being compared (see “FXAM—Examine Floating-Point” in this chapter). If the value in register ST(0) is a NaN or is in an undefined format, the condition flags are set to “unordered” and the invalid operation exception is generated.</p><p>The sign of zero is ignored, so that (– 0.0 ← +0.0).</p><p>This instruction’s operation is the same in non-64-bit modes and 64-bit mode.</p>","href":"https://www.felixcloutier.com/x86/FTST.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}