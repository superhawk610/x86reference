{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/lea",
    "result": {"pageContext":{"op":{"id":"lea","variants":["LEA"],"variant_descriptions":{"LEA":"Store effective address for m in register r64."},"text":"<p>Computes the effective address of the second operand (the source operand) and stores it in the first operand (destination operand). The source operand is a memory address (offset part) specified with one of the processors addressing modes; the destination operand is a general-purpose register. The address-size and operand-size attributes affect the action performed by this instruction, as shown in the following table. The operand-size attribute of the instruction is determined by the chosen register; the address-size attribute is determined by the attribute of the code segment.</p><p>Different assemblers may use different algorithms based on the size attribute and symbolic reference of the source operand.</p><p>In 64-bit mode, the instructionâ€™s destination operand is governed by operand size attribute, the default operand size is 32 bits. Address calculation is governed by address size attribute, the default address size is 64-bits. In 64-bit mode, address size of 16 bits is not encodable. See <a href=\"https://www.felixcloutier.com/x86/LEA.html#tbl-3-55\" rel=\"noreferrer noopener\" target=\"_blank\">Table 3-55</a>.</p>","href":"https://www.felixcloutier.com/x86/LEA.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}