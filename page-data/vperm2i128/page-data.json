{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vperm2i128",
    "result": {"pageContext":{"op":{"id":"vperm2i128","variants":["VPERM2I128"],"variant_descriptions":{"VPERM2I128":"Permute 128-bit integer data in ymm2 and ymm3/mem using controls from imm8 and store result in ymm1."},"text":"<p>Permute 128 bit integer data from the first source operand (second operand) and second source operand (third operand) using bits in the 8-bit immediate and store results in the destination operand (first operand). The first source operand is a YMM register, the second source operand is a YMM register or a 256-bit memory location, and the destination operand is a YMM register.</p><p>Imm8[1:0] select the source for the first destination 128-bit field, imm8[5:4] select the source for the second destination field. If imm8[3] is set, the low 128-bit field is zeroed. If imm8[7] is set, the high 128-bit field is zeroed.</p><p>VEX.L must be 1, otherwise the instruction will #UD.</p>","href":"https://www.felixcloutier.com/x86/VPERM2I128.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}