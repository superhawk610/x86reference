{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/vpblendmb:vpblendmw",
    "result": {"pageContext":{"op":{"id":"vpblendmb:vpblendmw","variants":["VPBLENDMW","VPBLENDMB"],"variant_descriptions":{"VPBLENDMB":"Blend byte integer vector zmm2 and byte vector zmm3/m512 and store the result in zmm1, under control mask.","VPBLENDMW":"Blend word integer vector zmm2 and word vector zmm3/m512 and store the result in zmm1, under control mask."},"text":"<p>Performs an element-by-element blending of byte/word elements between the first source operand byte vector register and the second source operand byte vector from memory or register, using the instruction mask as selector. The result is written into the destination byte vector register.</p><p>The destination and first source operands are ZMM/YMM/XMM registers. The second source operand can be a ZMM/YMM/XMM register, a 512/256/128-bit memory location or a 512/256/128-bit memory location.</p><p>The mask is not used as a writemask for this instruction. Instead, the mask is used as an element selector: every element of the destination is conditionally selected between first source or second source using the value of the related mask bit (0 for first source, 1 for second source).</p>","href":"https://www.felixcloutier.com/x86/VPBLENDMB%3AVPBLENDMW.html"}}},
    "staticQueryHashes": ["3832154866","63159454"]}