{
    "componentChunkName": "component---src-templates-op-tsx",
    "path": "/ktestw:ktestb:ktestq:ktestd",
    "result": {"pageContext":{"op":{"id":"ktestw:ktestb:ktestq:ktestd","variants":["KTESTD","KTESTB","KTESTQ","KTESTW"],"variant_descriptions":{"KTESTW":"Set ZF and CF depending on sign bit AND and ANDN of 16 bits mask register sources.","KTESTB":"Set ZF and CF depending on sign bit AND and ANDN of 8 bits mask register sources.","KTESTQ":"Set ZF and CF depending on sign bit AND and ANDN of 64 bits mask register sources.","KTESTD":"Set ZF and CF depending on sign bit AND and ANDN of 32 bits mask register sources."},"text":"<p>Performs a bitwise comparison of the bits of the first source operand and corresponding bits in the second source operand. If the AND operation produces all zeros, the ZF is set else the ZF is clear. If the bitwise AND operation of the inverted first source operand with the second source operand produces all zeros the CF is set else the CF is clear. Only the EFLAGS register is updated.</p><p>Note: In VEX-encoded versions, VEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD.</p>","href":"https://www.felixcloutier.com/x86/KTESTW%3AKTESTB%3AKTESTQ%3AKTESTD.html"}}},
    "staticQueryHashes": ["2451724630","3830446752","63159454"]}